name: Build, publish and deploy reverse proxy

on: 
  workflow_dispatch:
  push:
    branches: [ "main" ]
    paths:
      - 'src/reverse_proxy/docker/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/reverse_proxy/docker/**'

jobs:
  deploy_reverse_proxy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
      - name: Build docker image
        run: docker build . -t supix/innovaprev_rp:latest -f ./src/reverse_proxy/docker/Dockerfile
      - name: Publish docker image to Docker hub
        run: |
          docker login -u supix -p ${{ secrets.DOCKER_HUB_TOKEN }}
          docker push supix/innovaprev_rp:latest
      - name: Pull newly published image and restart the container
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.HOST_ADDR }}
          username: ${{ secrets.HOST_USER }}
          key: ${{ secrets.HOST_KEY }}
          script: |
            echo ${{ secrets.HOST_PWD }} | sudo -S docker rm -f rp
            echo ${{ secrets.HOST_PWD }} | sudo -S docker pull supix/innovaprev_rp:latest
            echo ${{ secrets.HOST_PWD }} | sudo -S docker network inspect be_nw >/dev/null 2>&1 || echo ${{ secrets.HOST_PWD }} | sudo -S docker network create be_nw
            echo ${{ secrets.HOST_PWD }} | sudo -S docker network inspect fe_nw >/dev/null 2>&1 || echo ${{ secrets.HOST_PWD }} | sudo -S docker network create fe_nw
            echo ${{ secrets.HOST_PWD }} | sudo -S docker run -d \
              --network=be_nw --network=fe_nw \
              --name=rp \
              --restart=unless-stopped \
              -v ./certs/cert.pem:/etc/ssl/certs/cert.pem \
              -v ./certs/cert-qa.pem:/etc/ssl/certs/cert-qa.pem \
              -p 80:80 -p 443:443 \
              supix/innovaprev_rp:latest